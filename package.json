{
  "name": "netbeans-keybindings",
  "displayName": "Netbeans Keymaps",
  "description": "Bring Netbeans default keymap to VS Code.",
  "version": "0.0.9",
  "publisher": "grogdunn",
  "engines": {
    "vscode": "^1.9.0"
  },
  "categories": [
    "Keymaps"
  ],
  "keywords": [
    "keymap"
  ],
  "preview": false,
  "icon": "netbeans.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Grogdunn/vscode-nb-keybinding"
  },
  "bugs": {
    "url": "https://github.com/Grogdunn/vscode-nb-keybinding/issues"
  },
  "contributes": {
    "keybindings": [
      {
        "key": "alt+shift+f",
        "command": "editor.action.format",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+c",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+e",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+shift+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+shift+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "alt+shift+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "alt+shift+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+1",
        "command": "workbench.view.explorer"
      },
      {
        "key": "ctrl+shift+1",
        "command": "workbench.files.action.focusOpenEditorsView"
      },
      {
        "key": "ctrl+7",
        "command": "outline.focus"
      },
      {
        "key": "ctrl+u u",
        "command": "editor.action.transformToUppercase",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+u l",
        "command": "editor.action.transformToLowercase",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+shift+0",
        "command": "workbench.action.focusActiveEditorGroup"
      },
      {
        "key": "alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
      },
      {
        "command": "editor.fold",
        "key": "ctrl+numpad_subtract",
        "when": "editorTextFocus"
      },
      {
        "command": "editor.unfold",
        "key": "ctrl+numpad_add",
        "when": "editorTextFocus"
      },
      {
        "command": "editor.foldAll",
        "key": "ctrl+shift+numpad_subtract",
        "when": "editorTextFocus"
      },
      {
        "command": "editor.unfoldAll",
        "key": "ctrl+shift+numpad_add",
        "when": "editorTextFocus"
      },
      {
        "command": "workbench.action.closeWindow",
        "key": ""
      },
      {
        "command": "workbench.action.closeEditorsInGroup",
        "key": "ctrl+shift+w"
      },
      {
        "key": "alt+shift+o",
        "command": "workbench.action.quickOpen"
      },
      {
        "key": "ctrl+o",
        "command": "workbench.action.showAllSymbols"
      },
      {
        "key": "ctrl+shift+i",
        "command": "editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
      },
      {
        "key": "alt+left",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
      },
      {
        "key": "alt+right",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
      },
      {
        "key": "ctrl+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
      }
    ]
  }
}
